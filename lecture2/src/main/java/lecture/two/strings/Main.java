package lecture.two.strings;

// –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è STR –Ω—É–∂–Ω–æ –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å —Å --enable-preview –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å JDK 21+
// import java.util.StringTemplate;
// import static java.util.StringTemplate.STR;
// import static java.util.FormatProcessor.FMT;

public class Main {
    public static void main(String[] args) {

        // === –°–ø–æ—Å–æ–±—ã –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫ ===

        // 1. –ß–µ—Ä–µ–∑ —Å—Ç—Ä–æ–∫–æ–≤—ã–π –ª–∏—Ç–µ—Ä–∞–ª
        String str1 = "Hello";

        // 2. –ß–µ—Ä–µ–∑ new (—Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –≤ heap, –Ω–µ –∏–∑ string pool)
        String str2 = new String("World");

        // 3. –ò–∑ –º–∞—Å—Å–∏–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤
        char[] charArray = {'J', 'a', 'v', 'a'};
        String str3 = new String(charArray);

        // 4. –ò–∑ —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤
        String str4 = new String(charArray, 1, 2); // "av"

        // 5. –ò–∑ –º–∞—Å—Å–∏–≤–∞ –±–∞–π—Ç–æ–≤
        byte[] byteArray = {65, 66, 67}; // A, B, C
        String str5 = new String(byteArray);

        // 6. –ß–µ—Ä–µ–∑ StringBuilder
        String str6 = new StringBuilder("Builder String").toString();

        // 7. –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ (text block) ‚Äî —Å Java 15
        String str7 = """
                      –≠—Ç–æ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
                      –û–Ω–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫,
                      —Ç–∞–±—É–ª—è—Ü–∏–∏ –∏ –∫–∞–≤—ã—á–∫–∏ "–≤–Ω—É—Ç—Ä–∏ —Ç–µ–∫—Å—Ç–∞".
                      """;

        System.out.println("=== –°—Ç—Ä–æ–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è ===");
        System.out.println(str1);
        System.out.println(str2);
        System.out.println(str3);
        System.out.println(str4);
        System.out.println(str5);
        System.out.println(str6);
        System.out.println("\nText Block:\n" + str7);

        // === üõ†Ô∏è –ú–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞ String ===

        String base = "  Java Programming Language  ";
        System.out.println("\n=== –ú–µ—Ç–æ–¥—ã String ===");
        System.out.println("length(): " + base.length());
        System.out.println("charAt(5): " + base.charAt(5));
        System.out.println("toUpperCase(): " + base.toUpperCase());
        System.out.println("toLowerCase(): " + base.toLowerCase());
        System.out.println("trim(): [" + base.trim() + "]");
        System.out.println("substring(2, 6): " + base.substring(2, 6));
        System.out.println("contains(\"Program\"): " + base.contains("Program"));
        System.out.println("indexOf(\"a\"): " + base.indexOf("a"));
        System.out.println("lastIndexOf(\"a\"): " + base.lastIndexOf("a"));
        System.out.println("replace(\"Java\", \"Kotlin\"): " + base.replace("Java", "Kotlin"));
        System.out.println("startsWith(\"  Java\"): " + base.startsWith("  Java"));
        System.out.println("endsWith(\"e  \"): " + base.endsWith("e  "));
        System.out.println("equals(\"test\"): " + base.equals("test"));
        System.out.println("equalsIgnoreCase(...): " +
                base.equalsIgnoreCase("  java programming language  "));
        System.out.println("isEmpty(): " + base.isEmpty());
        System.out.println("isBlank(): " + base.isBlank());  // Java 11+
        System.out.println("repeat(2): " + "Hi ".repeat(2)); // Java 11+
        System.out.println("join(): " + String.join(" - ", "Java", "Python", "C++"));

        // === –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –º–∞—Å—Å–∏–≤—ã ===
        char[] chars = base.toCharArray();
        byte[] bytes = base.getBytes();
        System.out.println("toCharArray(): " + java.util.Arrays.toString(chars));
        System.out.println("getBytes(): " + java.util.Arrays.toString(bytes));

        // === –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ ===
        String s1 = "Test";
        String s2 = "Test";
        String s3 = new String("Test");

        System.out.println("\n=== –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ ===");
        System.out.println("s1 == s2: " + (s1 == s2));               // true
        System.out.println("s1 == s3: " + (s1 == s3));               // false
        System.out.println("s1.equals(s3): " + s1.equals(s3));       // true

        // === –®–∞–±–ª–æ–Ω—ã —Å—Ç—Ä–æ–∫ STR (Java 21+) ===
        /*
        String name = "Alice";
        int age = 30;

        // –ò–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è —Å—Ç—Ä–æ–∫ (–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏—á–∞ Java 21+)
        String greeting = STR."Hello, \{name}! You are \{age} years old.";
        System.out.println("\nSTR-–∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è:\n" + greeting);

        // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ FMT –¥–ª—è printf-–ø–æ–¥–æ–±–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
        String formatted = FMT."%-10s: \{name}\n%-10s: \{age}"("Name", "Age");
        System.out.println("\n–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥:\n" + formatted);
        */
    }
}
